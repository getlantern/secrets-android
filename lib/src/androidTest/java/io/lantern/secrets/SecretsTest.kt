/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.lantern.secrets

import android.content.Context
import androidx.test.ext.junit.runners.AndroidJUnit4
import androidx.test.platform.app.InstrumentationRegistry
import org.junit.runner.RunWith
import java.util.*
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotEquals
import android.util.Base64


@RunWith(AndroidJUnit4::class)
class SecretsTest {
    @Test
    fun testSecrets() {
        val ctx = InstrumentationRegistry.getInstrumentation().targetContext
        val prefs = ctx.getSharedPreferences(UUID.randomUUID().toString(), Context.MODE_PRIVATE)
        val secrets = Secrets(
            UUID.randomUUID().toString(),
            prefs
        )

        val oldSecret = "I'm an old secret that wasn't secret"
        prefs.edit().putString("oldSecret", oldSecret).commit()
        val newSecret = "I'm a new secret"
        secrets.put("newSecret", newSecret)
        assertEquals(
            newSecret,
            secrets.get("newSecret"),
            "new secret should round-trip successfully"
        )
        assertEquals(
            oldSecret,
            secrets.get("oldSecret"),
            "old unencrypted secret should still be available"
        )
        assertNotEquals(
            newSecret,
            prefs.getString("newSecret", null),
            "new secret should not be available unencrypted in preferences"
        )

        val generatedSecret = secrets.get("generated", 16)
        assertEquals(generatedSecret, secrets.get("generated"))
        assertEquals(16, Base64.decode(generatedSecret, Base64.DEFAULT).size)
    }
}